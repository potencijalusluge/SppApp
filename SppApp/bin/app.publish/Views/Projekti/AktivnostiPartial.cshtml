@using SppApp.Helpers
@model  SppApp.Models.Aktivnosti

<tr class="tableData">
    @using (Html.BeginCollectionItem("AktivnostiLista"))
    {
        if (Model.Id != 0)
        {
            @Html.HiddenFor(model => model.Id);
            @Html.HiddenFor(model => model.ProjektId);
        }
        <td>
            @Html.LabelFor(model => model.Opis, "Opis aktivnosti")<br />
            @Html.TextAreaFor(model => model.Opis, new { @class = "form-control" })<br />
            @Html.ValidationMessageFor(model => model.Opis, "", new { @class = "text-danger" })
        </td>
        <td>
            @Html.LabelFor(model => model.Vrsta)<br />
            @Html.RadioButtonFor(model => model.Vrsta, "radovi") EU <br />
            @Html.RadioButtonFor(model => model.Vrsta, "usluge") Vlatiti izvori <br />
            @Html.RadioButtonFor(model => model.Vrsta, "oprema") Ostalo <br />            
            @Html.ValidationMessageFor(model => model.Vrsta, "", new { @class = "text-danger" })
        </td>
        <td>
            @Html.LabelFor(model => model.BrojJedinica, "Broj jedinica")<br />
            @Html.EditorFor(model => model.BrojJedinica, new { htmlAttributes = new { @class = "form-control narrow", data_val_number = "Vrijednost mora biti broj sa decimalnim zarezom.", onkeyup = "currencyFormatHR()" } })<br />
            @Html.ValidationMessageFor(model => model.BrojJedinica, "", new { @class = "text-danger" })

            @Html.LabelFor(model => model.JedinicaMjere)<br />
            @Html.DropDownListFor(model => model.JedinicaMjere, new[] { new SelectListItem() { Text = "kg", Value = "kg" }, new SelectListItem() { Text = "tona", Value = "tona" }, new SelectListItem() { Text = "m", Value = "m" }, new SelectListItem() { Text = "km", Value = "km" }, new SelectListItem() { Text = "m2", Value = "m2" }, new SelectListItem() { Text = "ha", Value = "ha" }, new SelectListItem() { Text = "komplet", Value = "komplet" }, new SelectListItem() { Text = "sat", Value = "sat" }, new SelectListItem() { Text = "dan", Value = "dan" }, new SelectListItem() { Text = "broj", Value = "broj" }, new SelectListItem() { Text = "godišnje", Value = "godišnje" }, new SelectListItem() { Text = "mjesec", Value = "mjesec" } }, "Odaberite...", htmlAttributes: new { @class = "form-control narrow" })
            @Html.ValidationMessageFor(model => model.JedinicaMjere, "", new { @class = "text-danger" })<br />

            @Html.LabelFor(model => model.JedinicnaCijena, "Jedinična cijena")<br />
            @Html.EditorFor(model => model.JedinicnaCijena, new { htmlAttributes = new { @class = "form-control narrow currency", data_val_number = "Vrijednost mora biti broj sa decimalnim zarezom.", data_val_range = "Vrijednost mora biti veća od nule.", data_val_range_min = "1", onkeyup = "currencyFormatHR()" } })<br />
            @Html.ValidationMessageFor(model => model.JedinicnaCijena, "", new { @class = "text-danger" })

        </td>
        <td>
            @Html.LabelFor(model => model.DatumZavrsetka, "Očekivani datum završetka")<br />
            @if (Model.DatumZavrsetka != null)
            {
                DateTime NewDatum = (DateTime)Model.DatumZavrsetka;
                @Html.EditorFor(model => model.DatumZavrsetka, new { htmlAttributes = new { @class = "form-control", @Value = NewDatum.ToString("yyyy-MM-dd") } })
            }
            else
            {
                @Html.EditorFor(model => model.DatumZavrsetka, new { htmlAttributes = new { @class = "form-control" } })
            }<br />
            @Html.ValidationMessageFor(model => model.DatumZavrsetka, "", new { @class = "text-danger" })
        </td>
        <td>
            <input type="button" value="&#8212;" id="aktivnostRedak" onclick="DeleteRow(this);" class="btn btn-primary" style="float:right; background-color: #EF7215 !important; border-color: #EF7215 !important" />
        </td>


    }
</tr>
<tr><td colspan="5"></td></tr>

